[{"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/index.js":"1","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/serviceWorker.js":"2","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/App.js":"3","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/context/LayoutContext.js":"4","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/context/UserContext.js":"5","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/themes/index.js":"6","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Layout/Layout.js":"7","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/error/Error.js":"8","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/login/Login.js":"9","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/themes/default.js":"10","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/login/styles.js":"11","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/error/styles.js":"12","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Layout/styles.js":"13","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/charts/Charts.js":"14","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/icons/Icons.js":"15","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/tables/Tables.js":"16","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/maps/Maps.js":"17","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/notifications/Notifications.js":"18","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/typography/Typography.js":"19","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/Dashboard.js":"20","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/Sidebar.js":"21","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Header/Header.js":"22","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/charts/components/ApexHeatmap.js":"23","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/charts/components/ApexLineChart.js":"24","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/icons/styles.js":"25","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/mock.js":"26","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/maps/styles.js":"27","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/PageTitle/PageTitle.js":"28","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Widget/Widget.js":"29","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/notifications/styles.js":"30","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/typography/styles.js":"31","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Header/styles.js":"32","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/styles.js":"33","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/components/Table/Table.js":"34","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/styles.js":"35","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/components/Dot.js":"36","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"37","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/components/BigStat/BigStat.js":"38","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Wrappers/Wrappers.js":"39","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Notification/Notification.js":"40","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/UserAvatar/UserAvatar.js":"41","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/PageTitle/styles.js":"42","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Widget/styles.js":"43","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/components/BigStat/styles.js":"44","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/components/SidebarLink/styles.js":"45","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Notification/styles.js":"46","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/UserAvatar/styles.js":"47"},{"size":869,"mtime":1692278485156,"results":"48","hashOfConfig":"49"},{"size":4948,"mtime":1692278485166,"results":"50","hashOfConfig":"49"},{"size":1711,"mtime":1692595749000,"results":"51","hashOfConfig":"49"},{"size":1392,"mtime":1692278485155,"results":"52","hashOfConfig":"49"},{"size":1977,"mtime":1692278485155,"results":"53","hashOfConfig":"49"},{"size":502,"mtime":1692278485166,"results":"54","hashOfConfig":"49"},{"size":4435,"mtime":1692279789772,"results":"55","hashOfConfig":"49"},{"size":1571,"mtime":1692278485159,"results":"56","hashOfConfig":"49"},{"size":8886,"mtime":1692278485162,"results":"57","hashOfConfig":"49"},{"size":2987,"mtime":1692278485166,"results":"58","hashOfConfig":"49"},{"size":3133,"mtime":1692278485162,"results":"59","hashOfConfig":"49"},{"size":1334,"mtime":1692278485160,"results":"60","hashOfConfig":"49"},{"size":680,"mtime":1692278485148,"results":"61","hashOfConfig":"49"},{"size":5556,"mtime":1692278485156,"results":"62","hashOfConfig":"49"},{"size":377833,"mtime":1692278485161,"results":"63","hashOfConfig":"49"},{"size":2082,"mtime":1692278485165,"results":"64","hashOfConfig":"49"},{"size":971,"mtime":1692278485163,"results":"65","hashOfConfig":"49"},{"size":13470,"mtime":1692278485164,"results":"66","hashOfConfig":"49"},{"size":4506,"mtime":1692278485165,"results":"67","hashOfConfig":"49"},{"size":16019,"mtime":1692358399634,"results":"68","hashOfConfig":"49"},{"size":4302,"mtime":1692358695602,"results":"69","hashOfConfig":"49"},{"size":10107,"mtime":1692279599783,"results":"70","hashOfConfig":"49"},{"size":1794,"mtime":1692278485156,"results":"71","hashOfConfig":"49"},{"size":1328,"mtime":1692278485157,"results":"72","hashOfConfig":"49"},{"size":780,"mtime":1692278485161,"results":"73","hashOfConfig":"49"},{"size":4105,"mtime":1692278485158,"results":"74","hashOfConfig":"49"},{"size":171,"mtime":1692278485163,"results":"75","hashOfConfig":"49"},{"size":427,"mtime":1692278485149,"results":"76","hashOfConfig":"49"},{"size":2485,"mtime":1692278485153,"results":"77","hashOfConfig":"49"},{"size":1858,"mtime":1692278485165,"results":"78","hashOfConfig":"49"},{"size":374,"mtime":1692278485166,"results":"79","hashOfConfig":"49"},{"size":3868,"mtime":1692278485147,"results":"80","hashOfConfig":"49"},{"size":1304,"mtime":1692278485152,"results":"81","hashOfConfig":"49"},{"size":1274,"mtime":1692278485158,"results":"82","hashOfConfig":"49"},{"size":2870,"mtime":1692278485159,"results":"83","hashOfConfig":"49"},{"size":862,"mtime":1692278485151,"results":"84","hashOfConfig":"49"},{"size":4685,"mtime":1692362097070,"results":"85","hashOfConfig":"49"},{"size":4039,"mtime":1692278485158,"results":"86","hashOfConfig":"49"},{"size":3790,"mtime":1692278485154,"results":"87","hashOfConfig":"49"},{"size":3296,"mtime":1692278485148,"results":"88","hashOfConfig":"49"},{"size":593,"mtime":1692278485152,"results":"89","hashOfConfig":"49"},{"size":462,"mtime":1692278485150,"results":"90","hashOfConfig":"49"},{"size":969,"mtime":1692278485154,"results":"91","hashOfConfig":"49"},{"size":1027,"mtime":1692278485158,"results":"92","hashOfConfig":"49"},{"size":1608,"mtime":1692362418543,"results":"93","hashOfConfig":"49"},{"size":993,"mtime":1692278485149,"results":"94","hashOfConfig":"49"},{"size":276,"mtime":1692278485153,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"14fjfng",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/index.js",[],["195","196"],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/serviceWorker.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/App.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/context/LayoutContext.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/context/UserContext.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/themes/index.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Layout/Layout.js",["197","198","199","200","201","202"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport {Box, IconButton, Link} from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n        <>\n          <Header history={props.history} />\n          <Sidebar />\n          <div\n            className={classnames(classes.content, {\n              [classes.contentShift]: layoutState.isSidebarOpened,\n            })}\n          >\n            <div className={classes.fakeToolbar} />\n            <Switch>\n              <Route path=\"/app/dashboard\" component={Dashboard} />\n              <Route path=\"/app/typography\" component={Typography} />\n              <Route path=\"/app/tables\" component={Tables} />\n              <Route path=\"/app/notifications\" component={Notifications} />\n              <Route\n                exact\n                path=\"/app/ui\"\n                render={() => <Redirect to=\"/app/ui/icons\" />}\n              />\n              <Route path=\"/app/ui/maps\" component={Maps} />\n              <Route path=\"/app/ui/icons\" component={Icons} />\n              <Route path=\"/app/ui/charts\" component={Charts} />\n            </Switch>\n            <Box\n              mt={5}\n              width={\"100%\"}\n              display={\"flex\"}\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n            >\n              {/* <div>\n                <Link\n                  color={'primary'}\n                  href={'https://flatlogic.com/'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  Flatlogic\n                </Link>\n                <Link\n                  color={'primary'}\n                  href={'https://flatlogic.com/about'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  About Us\n                </Link>\n                <Link\n                  color={'primary'}\n                  href={'https://flatlogic.com/blog'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  Blog\n                </Link>\n              </div>\n              <div>\n                <Link\n                  href={'https://www.facebook.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton aria-label=\"facebook\">\n                    <Icon\n                      path={FacebookIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link>\n                <Link\n                  href={'https://twitter.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton aria-label=\"twitter\">\n                    <Icon\n                      path={TwitterIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link>\n                <Link\n                  href={'https://github.com/flatlogic'}\n                  target={'_blank'}\n                >\n                  <IconButton\n                    aria-label=\"github\"\n                    style={{marginRight: -12}}\n                  >\n                    <Icon\n                      path={GithubIcon}\n                      size={1}\n                      color=\"#6E6E6E99\"\n                    />\n                  </IconButton>\n                </Link>\n              </div> */}\n            </Box>\n          </div>\n        </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/error/Error.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/login/Login.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/themes/default.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/login/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/error/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Layout/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/charts/Charts.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/icons/Icons.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/tables/Tables.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/maps/Maps.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/notifications/Notifications.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/typography/Typography.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/Dashboard.js",["203"],"import React, { useState,useEffect } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\n\n\n\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n     fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\n        .then((response) => response.json())\n        .then((data) => {\n           console.log(data);\n           setPosts(data);\n        }).catch((err) => {\n           console.log(err.message);\n        });\n  }, []);\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button={<Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n        Latest Reports\n    </Button>} />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n              122,567\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n\n \n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/Sidebar.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Header/Header.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      {/* <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          React Material Admin\n        </Typography>\n        <div className={classes.grow} />\n        <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button>\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              John Smith\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://flatlogic.com\"\n            >\n              Flalogic.com\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar> */}\n    </AppBar>\n  );\n}\n","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/charts/components/ApexHeatmap.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/charts/components/ApexLineChart.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/icons/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/mock.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/maps/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/PageTitle/PageTitle.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Widget/Widget.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/notifications/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/typography/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Header/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/components/Table/Table.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/components/Dot.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Wrappers/Wrappers.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Notification/Notification.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/UserAvatar/UserAvatar.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/PageTitle/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Widget/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Sidebar/components/SidebarLink/styles.js",["243"],"import { green } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  externalLink: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textDecoration: 'none'\n  },\n  linkActive: {\n    backgroundColor: theme.palette.background.light,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    \"&:hover, &:focus\": {\n      backgroundColor: \"#FFFFFF\",\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  linkIconActive: {\n    color: theme.palette.primary.main,\n  },\n  linkText: {\n    padding: 0,\n    color: theme.palette.text.secondary + \"CC\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: theme.palette.text.primary,\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  toptitle: {\n    color: \"#03a9f4\",\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n}));\n","/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/Notification/styles.js",[],"/Users/kingsleymitchell/Documents/GitHub/react-material-admin/src/components/UserAvatar/styles.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":9,"column":14,"nodeType":"250","messageId":"251","endLine":9,"endColumn":24},{"ruleId":"248","severity":1,"message":"252","line":9,"column":26,"nodeType":"250","messageId":"251","endLine":9,"endColumn":30},{"ruleId":"248","severity":1,"message":"253","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":12},{"ruleId":"248","severity":1,"message":"254","line":14,"column":18,"nodeType":"250","messageId":"251","endLine":14,"endColumn":30},{"ruleId":"248","severity":1,"message":"255","line":15,"column":17,"nodeType":"250","messageId":"251","endLine":15,"endColumn":28},{"ruleId":"248","severity":1,"message":"256","line":16,"column":16,"nodeType":"250","messageId":"251","endLine":16,"endColumn":26},{"ruleId":"248","severity":1,"message":"257","line":54,"column":10,"nodeType":"250","messageId":"251","endLine":54,"endColumn":15},{"ruleId":"248","severity":1,"message":"258","line":4,"column":3,"nodeType":"250","messageId":"251","endLine":4,"endColumn":10},{"ruleId":"248","severity":1,"message":"249","line":5,"column":3,"nodeType":"250","messageId":"251","endLine":5,"endColumn":13},{"ruleId":"248","severity":1,"message":"259","line":6,"column":3,"nodeType":"250","messageId":"251","endLine":6,"endColumn":12},{"ruleId":"248","severity":1,"message":"260","line":7,"column":3,"nodeType":"250","messageId":"251","endLine":7,"endColumn":7},{"ruleId":"248","severity":1,"message":"261","line":8,"column":3,"nodeType":"250","messageId":"251","endLine":8,"endColumn":11},{"ruleId":"248","severity":1,"message":"262","line":9,"column":3,"nodeType":"250","messageId":"251","endLine":9,"endColumn":6},{"ruleId":"248","severity":1,"message":"252","line":10,"column":3,"nodeType":"250","messageId":"251","endLine":10,"endColumn":7},{"ruleId":"248","severity":1,"message":"263","line":13,"column":11,"nodeType":"250","messageId":"251","endLine":13,"endColumn":19},{"ruleId":"248","severity":1,"message":"264","line":14,"column":18,"nodeType":"250","messageId":"251","endLine":14,"endColumn":26},{"ruleId":"248","severity":1,"message":"265","line":15,"column":24,"nodeType":"250","messageId":"251","endLine":15,"endColumn":41},{"ruleId":"248","severity":1,"message":"266","line":16,"column":13,"nodeType":"250","messageId":"251","endLine":16,"endColumn":24},{"ruleId":"248","severity":1,"message":"267","line":17,"column":13,"nodeType":"250","messageId":"251","endLine":17,"endColumn":23},{"ruleId":"248","severity":1,"message":"268","line":18,"column":11,"nodeType":"250","messageId":"251","endLine":18,"endColumn":19},{"ruleId":"248","severity":1,"message":"269","line":19,"column":16,"nodeType":"250","messageId":"251","endLine":19,"endColumn":29},{"ruleId":"248","severity":1,"message":"270","line":21,"column":8,"nodeType":"250","messageId":"251","endLine":21,"endColumn":18},{"ruleId":"248","severity":1,"message":"271","line":27,"column":10,"nodeType":"250","messageId":"251","endLine":27,"endColumn":15},{"ruleId":"248","severity":1,"message":"272","line":27,"column":17,"nodeType":"250","messageId":"251","endLine":27,"endColumn":27},{"ruleId":"248","severity":1,"message":"273","line":27,"column":29,"nodeType":"250","messageId":"251","endLine":27,"endColumn":35},{"ruleId":"248","severity":1,"message":"274","line":28,"column":8,"nodeType":"250","messageId":"251","endLine":28,"endColumn":20},{"ruleId":"248","severity":1,"message":"275","line":29,"column":8,"nodeType":"250","messageId":"251","endLine":29,"endColumn":18},{"ruleId":"248","severity":1,"message":"276","line":35,"column":3,"nodeType":"250","messageId":"251","endLine":35,"endColumn":16},{"ruleId":"248","severity":1,"message":"277","line":37,"column":27,"nodeType":"250","messageId":"251","endLine":37,"endColumn":34},{"ruleId":"248","severity":1,"message":"278","line":39,"column":7,"nodeType":"250","messageId":"251","endLine":39,"endColumn":15},{"ruleId":"248","severity":1,"message":"279","line":70,"column":7,"nodeType":"250","messageId":"251","endLine":70,"endColumn":20},{"ruleId":"248","severity":1,"message":"280","line":96,"column":7,"nodeType":"250","messageId":"251","endLine":96,"endColumn":18},{"ruleId":"248","severity":1,"message":"281","line":97,"column":7,"nodeType":"250","messageId":"251","endLine":97,"endColumn":21},{"ruleId":"248","severity":1,"message":"282","line":98,"column":7,"nodeType":"250","messageId":"251","endLine":98,"endColumn":19},{"ruleId":"248","severity":1,"message":"283","line":101,"column":8,"nodeType":"250","messageId":"251","endLine":101,"endColumn":16},{"ruleId":"248","severity":1,"message":"284","line":101,"column":18,"nodeType":"250","messageId":"251","endLine":101,"endColumn":29},{"ruleId":"248","severity":1,"message":"285","line":102,"column":8,"nodeType":"250","messageId":"251","endLine":102,"endColumn":21},{"ruleId":"248","severity":1,"message":"286","line":102,"column":23,"nodeType":"250","messageId":"251","endLine":102,"endColumn":39},{"ruleId":"248","severity":1,"message":"287","line":103,"column":8,"nodeType":"250","messageId":"251","endLine":103,"endColumn":25},{"ruleId":"248","severity":1,"message":"288","line":103,"column":27,"nodeType":"250","messageId":"251","endLine":103,"endColumn":47},{"ruleId":"248","severity":1,"message":"289","line":104,"column":8,"nodeType":"250","messageId":"251","endLine":104,"endColumn":29},{"ruleId":"248","severity":1,"message":"290","line":104,"column":31,"nodeType":"250","messageId":"251","endLine":104,"endColumn":55},{"ruleId":"248","severity":1,"message":"291","line":105,"column":8,"nodeType":"250","messageId":"251","endLine":105,"endColumn":19},{"ruleId":"248","severity":1,"message":"292","line":105,"column":21,"nodeType":"250","messageId":"251","endLine":105,"endColumn":35},{"ruleId":"248","severity":1,"message":"293","line":106,"column":8,"nodeType":"250","messageId":"251","endLine":106,"endColumn":20},{"ruleId":"248","severity":1,"message":"294","line":106,"column":22,"nodeType":"250","messageId":"251","endLine":106,"endColumn":35},{"ruleId":"248","severity":1,"message":"295","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":15},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'posts' is assigned a value but never used.","'Toolbar' is defined but never used.","'InputBase' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Fab' is defined but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'AccountIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'classNames' is defined but never used.","'Badge' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'toggleSidebar' is defined but never used.","'signOut' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'layoutState' is assigned a value but never used.","'layoutDispatch' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'profileMenu' is assigned a value but never used.","'setProfileMenu' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'green' is defined but never used.","no-global-assign","no-unsafe-negation"]